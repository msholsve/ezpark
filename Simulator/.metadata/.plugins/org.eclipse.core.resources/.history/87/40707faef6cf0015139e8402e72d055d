package no.ntnu.eit.group_d;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;


public class Room extends JComponent {
	private JButton startButton;
	private JPanel seatsPanel;
	
	public Room(int size) {
		this.setLayout(new BorderLayout());
		this.seatsPanel = new JPanel();
		this.seatsPanel.setLayout(new FlowLayout());
        
        for(int i = 0; i < size; i++) {
        	JCheckBox cb = new JCheckBox("Seat " + i);
        	cb.addChangeListener(new CheckBoxListener());
        	seatsPanel.add(cb);
        }
        
        this.add(seatsPanel, BorderLayout.LINE_END);
        
        this.startButton = new JButton("Start simulation");
        this.startButton.addActionListener(new StartButtonListener());
        startButton.setBackground(Color.GREEN);
        this.add(startButton, BorderLayout.PAGE_END);
        
	}

	private class CheckBoxListener implements ChangeListener {
		@Override
		public void stateChanged(ChangeEvent e) {
			/*try {
				HttpHelper.postHttp("","");
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}*/
		}
	}
	
	private class StartButtonListener implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent e) {
			startButton.setText("Stop simulation");
			startButton.setBackground(Color.RED);
			//(new Thread(new SeatChangeSimulation())).start();
		}
	}
}
